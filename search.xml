<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PHP常用代码片段</title>
      <link href="/202111-96370c182df6/"/>
      <url>/202111-96370c182df6/</url>
      
        <content type="html"><![CDATA[<h3 id="1-获取上一周-上月-前几天时间"><a href="#1-获取上一周-上月-前几天时间" class="headerlink" title="1.获取上一周/上月/前几天时间"></a>1.获取上一周/上月/前几天时间</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">date(<span class="string">&quot;Y-m-d&quot;</span>,strtotime(<span class="string">&quot;-1 week&quot;</span>)); </span><br><span class="line">date(<span class="string">&quot;Y-m-d&quot;</span>,strtotime(<span class="string">&quot;-1 month&quot;</span>));</span><br><span class="line">date(<span class="string">&quot;Y-m-d&quot;</span>,strtotime(<span class="string">&quot;-1 day&quot;</span>));</span><br></pre></td></tr></table></figure><h3 id="2-二维数组去重"><a href="#2-二维数组去重" class="headerlink" title="2.二维数组去重"></a>2.二维数组去重</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">remove_duplicate</span>(<span class="params"><span class="variable">$arr</span>,<span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 建立一个目标数组 </span></span><br><span class="line"><span class="variable">$result</span> = []; </span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arr</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123; </span><br><span class="line"><span class="comment">// 查看有没有重复项 </span></span><br><span class="line"><span class="variable">$if_exit</span> = <span class="keyword">isset</span>(<span class="variable">$result</span>[<span class="variable">$value</span>[<span class="variable">$key</span>]]); </span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$if_exit</span>) &#123; </span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$value</span>[<span class="variable">$key</span>]); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line"><span class="variable">$result</span>[<span class="variable">$value</span>[<span class="variable">$key</span>]] = <span class="variable">$value</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$result</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$row</span>) &#123;</span><br><span class="line"><span class="variable">$result</span>[] = <span class="variable">$row</span>; </span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$result</span>[<span class="variable">$key</span>]); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-多维数组中按-7-个分成一组"><a href="#3-多维数组中按-7-个分成一组" class="headerlink" title="3.多维数组中按 7 个分成一组"></a>3.多维数组中按 7 个分成一组</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$memberList</span> = []; </span><br><span class="line"><span class="variable">$length</span> = ceil(count(<span class="variable">$allMember</span>));</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line"><span class="variable">$memberList</span>[] = array_slice(<span class="variable">$allMember</span>, <span class="variable">$i</span> * <span class="number">7</span>, <span class="number">7</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-二维数组按特定值排序"><a href="#4-二维数组按特定值排序" class="headerlink" title="4.二维数组按特定值排序"></a>4.二维数组按特定值排序</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$data</span> = [</span><br><span class="line">[ <span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">5698</span>, <span class="string">&#x27;first_name&#x27;</span> =&gt; <span class="string">&#x27;Bill&#x27;</span>, <span class="string">&#x27;last_name&#x27;</span> =&gt; <span class="string">&#x27;Gates&#x27;</span>], </span><br><span class="line">[ <span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">4767</span>, <span class="string">&#x27;first_name&#x27;</span> =&gt; <span class="string">&#x27;Steve&#x27;</span>, <span class="string">&#x27;last_name&#x27;</span> =&gt; <span class="string">&#x27;Aobs&#x27;</span>],</span><br><span class="line">[ <span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">3809</span>, <span class="string">&#x27;first_name&#x27;</span> =&gt; <span class="string">&#x27;Mark&#x27;</span>, <span class="string">&#x27;last_name&#x27;</span> =&gt; <span class="string">&#x27;Zuckerberg&#x27;</span>]</span><br><span class="line">]; </span><br><span class="line"><span class="comment">//根据字段last_name对数组$data进行降序排列 </span></span><br><span class="line"><span class="variable">$last_names</span> = array_column(<span class="variable">$data</span>,<span class="string">&#x27;last_name&#x27;</span>); </span><br><span class="line">array_multisort(<span class="variable">$last_names</span>,SORT_DESC,<span class="variable">$data</span>);</span><br><span class="line">var_dump(<span class="variable">$data</span>);</span><br></pre></td></tr></table></figure><h3 id="5-将中文拆分成数组"><a href="#5-将中文拆分成数组" class="headerlink" title="5.将中文拆分成数组"></a>5.将中文拆分成数组</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mb_str_split</span>(<span class="params"><span class="variable">$str</span></span>) </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> preg_split(<span class="string">&#x27;/(?&lt;!^)(?!$)/u&#x27;</span>, <span class="variable">$str</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-模拟发送-POST-请求"><a href="#6-模拟发送-POST-请求" class="headerlink" title="6.模拟发送 POST 请求"></a>6.模拟发送 POST 请求</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl_post</span>(<span class="params"><span class="variable">$url</span> , <span class="variable">$data</span>=[]</span>)</span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="variable">$ch</span> = curl_init(); </span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>); <span class="comment">// 要访问的地址</span></span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>); <span class="comment">// 获取的信息以文件流的形式返回</span></span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER, <span class="literal">FALSE</span>); <span class="comment">// 对认证证书来源的检查</span></span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYHOST, <span class="literal">FALSE</span>); <span class="comment">// 从证书中检查SSL加密算法是否存在</span></span><br><span class="line"><span class="comment">// POST数据 </span></span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_POST, <span class="number">1</span>); </span><br><span class="line"><span class="comment">// 把post的变量加上 </span></span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="variable">$data</span>); </span><br><span class="line"><span class="variable">$output</span> = curl_exec(<span class="variable">$ch</span>); </span><br><span class="line">curl_close(<span class="variable">$ch</span>); </span><br><span class="line"><span class="keyword">return</span> <span class="variable">$output</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-美化输出变量"><a href="#7-美化输出变量" class="headerlink" title="7.美化输出变量"></a>7.美化输出变量</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">p</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 定义样式</span></span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&#x27;&lt;pre style=&quot;display: block;padding: 9.5px;margin: 44px 0 0 0;font-size: 13px;line-height: 1.42857;color: #333;word-break: break-all;word-wrap: break-word;background-color: #F5F5F5;border: 1px solid #CCC;border-radius: 4px;&quot;&gt;&#x27;</span>;</span><br><span class="line">    <span class="comment">// 如果是boolean或者null直接显示文字；否则print</span></span><br><span class="line">    <span class="keyword">if</span> (is_bool(<span class="variable">$data</span>)) &#123;</span><br><span class="line">        <span class="variable">$show_data</span> = <span class="variable">$data</span> ? <span class="string">&#x27;true&#x27;</span> : <span class="string">&#x27;false&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">elseif</span>(is_null(<span class="variable">$data</span>)) &#123;</span><br><span class="line">        <span class="variable">$show_data</span> = <span class="string">&#x27;null&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$show_data</span> = print_r(<span class="variable">$data</span>,<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$str</span> .= <span class="variable">$show_data</span>;</span><br><span class="line">    <span class="variable">$str</span> .= <span class="string">&#x27;&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-支持中文的字符串截取"><a href="#8-支持中文的字符串截取" class="headerlink" title="8.支持中文的字符串截取"></a>8.支持中文的字符串截取</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 字符串截取，支持中文和其他编码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $str 需要转换的字符串</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $start 开始位置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $length 截取长度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $suffix 截断显示字符</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $charset 编码格式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">re_substr</span>(<span class="params"><span class="variable">$str</span>, <span class="variable">$start</span>=<span class="number">0</span>, <span class="variable">$length</span>, <span class="variable">$suffix</span>=<span class="literal">true</span>, <span class="variable">$charset</span>=<span class="string">&quot;utf-8&quot;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(function_exists(<span class="string">&quot;mb_substr&quot;</span>)) &#123;</span><br><span class="line"><span class="variable">$slice</span> = mb_substr(<span class="variable">$str</span>, <span class="variable">$start</span>, <span class="variable">$length</span>, <span class="variable">$charset</span>);</span><br><span class="line">&#125; <span class="keyword">elseif</span>(function_exists(<span class="string">&#x27;iconv_substr&#x27;</span>)) &#123;</span><br><span class="line">        <span class="variable">$slice</span> = iconv_substr(<span class="variable">$str</span>,<span class="variable">$start</span>,<span class="variable">$length</span>,<span class="variable">$charset</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$re</span>[<span class="string">&#x27;utf-8&#x27;</span>] = <span class="string">&quot;/[\x01-\x7f]|[\xc2-\xdf][\x80-\xbf]|[\xe0-\xef][\x80-\xbf]&#123;2&#125;|[\xf0-\xff][\x80-\xbf]&#123;3&#125;/&quot;</span>;</span><br><span class="line">        <span class="variable">$re</span>[<span class="string">&#x27;gb2312&#x27;</span>] = <span class="string">&quot;/[\x01-\x7f]|[\xb0-\xf7][\xa0-\xfe]/&quot;</span>;</span><br><span class="line">        <span class="variable">$re</span>[<span class="string">&#x27;gbk&#x27;</span>]  = <span class="string">&quot;/[\x01-\x7f]|[\x81-\xfe][\x40-\xfe]/&quot;</span>;</span><br><span class="line">        <span class="variable">$re</span>[<span class="string">&#x27;big5&#x27;</span>] = <span class="string">&quot;/[\x01-\x7f]|[\x81-\xfe]([\x40-\x7e]|\xa1-\xfe])/&quot;</span>;</span><br><span class="line">        preg_match_all(<span class="variable">$re</span>[<span class="variable">$charset</span>], <span class="variable">$str</span>, <span class="variable">$match</span>);</span><br><span class="line">        <span class="variable">$slice</span> = join(<span class="string">&quot;&quot;</span>,array_slice(<span class="variable">$match</span>[<span class="number">0</span>], <span class="variable">$start</span>, <span class="variable">$length</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$omit</span> = mb_strlen(<span class="variable">$str</span>) &gt;= <span class="variable">$length</span> ? <span class="string">&#x27;...&#x27;</span> : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$suffix</span> ? <span class="variable">$slice</span>.<span class="variable">$omit</span> : <span class="variable">$slice</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-获取一定范围内的随机数字"><a href="#9-获取一定范围内的随机数字" class="headerlink" title="9.获取一定范围内的随机数字"></a>9.获取一定范围内的随机数字</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取一定范围内的随机数字</span></span><br><span class="line"><span class="comment"> * 跟rand()函数的区别是 位数不足补零 例如</span></span><br><span class="line"><span class="comment"> * rand(1,9999)可能会得到 465</span></span><br><span class="line"><span class="comment"> * rand_number(1,9999)可能会得到 0465  保证是4位的</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> integer $min 最小值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> integer $max 最大值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rand_number</span> (<span class="params"><span class="variable">$min</span>=<span class="number">1</span>, <span class="variable">$max</span>=<span class="number">9999</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$strlen</span> = strlen(<span class="variable">$max</span>);</span><br><span class="line">    <span class="keyword">return</span> sprintf(<span class="string">&quot;%0&quot;</span> . <span class="variable">$strlen</span> . <span class="string">&quot;d&quot;</span>, mt_rand(<span class="variable">$min</span>, <span class="variable">$max</span>));</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-生成一定数量的随机数，并且不重复"><a href="#10-生成一定数量的随机数，并且不重复" class="headerlink" title="10.生成一定数量的随机数，并且不重复"></a>10.生成一定数量的随机数，并且不重复</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成一定数量的随机数，并且不重复</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> integer $number 数量</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $len 长度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $type 字串类型</span></span><br><span class="line"><span class="comment"> * 0 字母 1 数字 其它 混合</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">build_count_rand</span> (<span class="params"><span class="variable">$number</span>, <span class="variable">$length</span>=<span class="number">4</span>, <span class="variable">$mode</span>=<span class="number">1</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$mode</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$length</span> &lt; strlen(<span class="variable">$number</span>)) &#123;</span><br><span class="line">        <span class="comment">//不足以生成一定数量的不重复数字</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$rand</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$number</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$rand</span>[] = rand_string(<span class="variable">$length</span>, <span class="variable">$mode</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$unqiue</span> = array_unique(<span class="variable">$rand</span>);</span><br><span class="line">    <span class="keyword">if</span>(count(<span class="variable">$unqiue</span>) == count(<span class="variable">$rand</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$rand</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$count</span> = count(<span class="variable">$rand</span>) - count(<span class="variable">$unqiue</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$count</span>*<span class="number">3</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$rand</span>[] = rand_string(<span class="variable">$length</span>, <span class="variable">$mode</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$rand</span> = array_slice(array_unique(<span class="variable">$rand</span>), <span class="number">0</span>, <span class="variable">$number</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$rand</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11-生成不重复的随机数"><a href="#11-生成不重复的随机数" class="headerlink" title="11.生成不重复的随机数"></a>11.生成不重复的随机数</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成不重复的随机数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  int $start  需要生成的数字开始范围</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  int $end 结束范围</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  int $length 需要生成的随机数个数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array       生成的随机数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_rand_number</span>(<span class="params"><span class="variable">$start</span> = <span class="number">1</span>, <span class="variable">$end</span> = <span class="number">10</span>, <span class="variable">$length</span> = <span class="number">4</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$connt</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$temp</span> = [];</span><br><span class="line">    <span class="keyword">while</span>(<span class="variable">$connt</span> &lt; <span class="variable">$length</span>)&#123;</span><br><span class="line">        <span class="variable">$temp</span>[] = rand(<span class="variable">$start</span>, <span class="variable">$end</span>);</span><br><span class="line">        <span class="variable">$data</span> = array_unique(<span class="variable">$temp</span>);</span><br><span class="line">        <span class="variable">$connt</span> = count(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(<span class="variable">$data</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="12-curl-获取远程数据"><a href="#12-curl-获取远程数据" class="headerlink" title="12.curl 获取远程数据"></a>12.curl 获取远程数据</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用curl获取远程数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  string $url url连接</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string      获取到的数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl_get_contents</span>(<span class="params"><span class="variable">$url</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$ch</span> = curl_init();</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);                <span class="comment">//设置访问的url地址</span></span><br><span class="line">    <span class="comment">// curl_setopt($ch,CURLOPT_HEADER,1);               //是否显示头部信息</span></span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_TIMEOUT, <span class="number">5</span>);               <span class="comment">//设置超时</span></span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_USERAGENT, <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>]);   <span class="comment">//用户访问代理 User-Agent</span></span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_REFERER,<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>]);        <span class="comment">//设置 referer</span></span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>,CURLOPT_FOLLOWLOCATION,<span class="number">1</span>);          <span class="comment">//跟踪301</span></span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);        <span class="comment">//返回结果</span></span><br><span class="line">    <span class="variable">$r</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">    curl_close(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$r</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="13-不区分大小写的-in-array"><a href="#13-不区分大小写的-in-array" class="headerlink" title="13.不区分大小写的 in_array"></a>13.不区分大小写的 in_array</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 不区分大小写的in_array()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  string $str   检测的字符</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  array  $array 数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> boolear       是否in_array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">in_iarray</span>(<span class="params"><span class="variable">$str</span>,<span class="variable">$array</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$str</span> = strtolower(<span class="variable">$str</span>);</span><br><span class="line">    <span class="variable">$array</span> = array_map(<span class="string">&#x27;strtolower&#x27;</span>, <span class="variable">$array</span>);</span><br><span class="line">    <span class="keyword">if</span> (in_array(<span class="variable">$str</span>, <span class="variable">$array</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="14-根据时间戳计算距离现在的时间"><a href="#14-根据时间戳计算距离现在的时间" class="headerlink" title="14.根据时间戳计算距离现在的时间"></a>14.根据时间戳计算距离现在的时间</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 传入时间戳,计算距离现在的时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  number $time 时间戳</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string     返回多少以前</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">word_time</span>(<span class="params"><span class="variable">$time</span></span>) </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$time</span> = (<span class="keyword">int</span>) substr(<span class="variable">$time</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="variable">$int</span> = time() - <span class="variable">$time</span>;</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$int</span> &lt;= <span class="number">2</span>)&#123;</span><br><span class="line">        <span class="variable">$str</span> = sprintf(<span class="string">&#x27;刚刚&#x27;</span>, <span class="variable">$int</span>);</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="variable">$int</span> &lt; <span class="number">60</span>)&#123;</span><br><span class="line">        <span class="variable">$str</span> = sprintf(<span class="string">&#x27;%d秒前&#x27;</span>, <span class="variable">$int</span>);</span><br><span class="line">    &#125;<span class="keyword">elseif</span> (<span class="variable">$int</span> &lt; <span class="number">3600</span>)&#123;</span><br><span class="line">        <span class="variable">$str</span> = sprintf(<span class="string">&#x27;%d分钟前&#x27;</span>, floor(<span class="variable">$int</span> / <span class="number">60</span>));</span><br><span class="line">    &#125;<span class="keyword">elseif</span> (<span class="variable">$int</span> &lt; <span class="number">86400</span>)&#123;</span><br><span class="line">        <span class="variable">$str</span> = sprintf(<span class="string">&#x27;%d小时前&#x27;</span>, floor(<span class="variable">$int</span> / <span class="number">3600</span>));</span><br><span class="line">    &#125;<span class="keyword">elseif</span> (<span class="variable">$int</span> &lt; <span class="number">1728000</span>)&#123;</span><br><span class="line">        <span class="variable">$str</span> = sprintf(<span class="string">&#x27;%d天前&#x27;</span>, floor(<span class="variable">$int</span> / <span class="number">86400</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$str</span> = date(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>, <span class="variable">$time</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="15-获取访问设备的类型"><a href="#15-获取访问设备的类型" class="headerlink" title="15.获取访问设备的类型"></a>15.获取访问设备的类型</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取当前访问的设备类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> integer 1：其他  2：iOS  3：Android</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_device_type</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//全部变成小写字母</span></span><br><span class="line">    <span class="variable">$agent</span> = strtolower(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>]);</span><br><span class="line">    <span class="variable">$type</span> = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//分别进行判断</span></span><br><span class="line">    <span class="keyword">if</span>(strpos(<span class="variable">$agent</span>, <span class="string">&#x27;iphone&#x27;</span>) !== <span class="literal">false</span> || strpos(<span class="variable">$agent</span>, <span class="string">&#x27;ipad&#x27;</span>) !== <span class="literal">false</span>)&#123;</span><br><span class="line">        <span class="variable">$type</span> = <span class="number">2</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">if</span>(strpos(<span class="variable">$agent</span>, <span class="string">&#x27;android&#x27;</span>) !== <span class="literal">false</span>)&#123;</span><br><span class="line">        <span class="variable">$type</span> = <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$type</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="16-下载文件"><a href="#16-下载文件" class="headerlink" title="16.下载文件"></a>16.下载文件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">download</span>(<span class="params"><span class="variable">$file_url</span>, <span class="variable">$new_name</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$file_url</span>) || trim(<span class="variable">$file_url</span>) == <span class="string">&#x27;&#x27;</span>)&#123;  </span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;500&#x27;</span>;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!file_exists(<span class="variable">$file_url</span>))&#123; </span><br><span class="line"><span class="comment">//检查文件是否存在  </span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;404&#x27;</span>;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file_name</span> = basename(<span class="variable">$file_url</span>);  </span><br><span class="line"><span class="variable">$file_type</span> = explode(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$file_url</span>);  </span><br><span class="line"><span class="variable">$file_type</span> = <span class="variable">$file_type</span>[count(<span class="variable">$file_type</span>) - <span class="number">1</span>];  </span><br><span class="line"><span class="variable">$file_name</span> = trim(<span class="variable">$new_name</span> == <span class="string">&#x27;&#x27;</span>) ? <span class="variable">$file_name</span> : urlencode(<span class="variable">$new_name</span>) .<span class="string">&#x27;.&#x27;</span>. <span class="variable">$file_type</span>;  </span><br><span class="line"><span class="variable">$file_type</span> = fopen(<span class="variable">$file_url</span>, <span class="string">&#x27;r&#x27;</span>); <span class="comment">//打开文件  </span></span><br><span class="line"><span class="comment">//输入文件标签  </span></span><br><span class="line">header(<span class="string">&quot;Content-type: application/octet-stream&quot;</span>);  </span><br><span class="line">header(<span class="string">&quot;Accept-Ranges: bytes&quot;</span>);  </span><br><span class="line">header(<span class="string">&quot;Accept-Length: &quot;</span>.filesize(<span class="variable">$file_url</span>));  </span><br><span class="line">header(<span class="string">&quot;Content-Disposition: attachment; filename=&quot;</span>.<span class="variable">$file_name</span>);  </span><br><span class="line"><span class="comment">//输出文件内容  </span></span><br><span class="line"><span class="keyword">echo</span> fread(<span class="variable">$file_type</span>, filesize(<span class="variable">$file_url</span>));  </span><br><span class="line">fclose(<span class="variable">$file_type</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP 3.2 字母函数指南</title>
      <link href="/202111-be55dc4abd4f/"/>
      <url>/202111-be55dc4abd4f/</url>
      
        <content type="html"><![CDATA[<h1 id="A-方法"><a href="#A-方法" class="headerlink" title="A 方法"></a>A 方法</h1><p>用于在内部实例化控制器，调用格式：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A(&#x27;[项目://][分组/]模块&#x27;,&#x27;控制器层名称&#x27;)</span></span><br><span class="line"><span class="variable">$User</span> = A(<span class="string">&#x27;User&#x27;</span>);</span><br><span class="line"><span class="variable">$User</span> = A(<span class="string">&#x27;Admin://User&#x27;</span>);</span><br></pre></td></tr></table></figure><p>实例化控制器后，就可以调用该控制器中的方法，不过需要注意的情况是，在跨项目调用的情况下，如果你的操作方法 有针对当前控制器的特殊变量操作，会有一些未知的问题，所以，一般来说，官方建议需要公共调用的控制器层单独开发，不要有太多的依赖关系。</p><h1 id="B-方法"><a href="#B-方法" class="headerlink" title="B 方法"></a>B 方法</h1><p>这是随着行为应运而生的新生函数，可以执行某个行为，例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B(<span class="string">&#x27;app_begin&#x27;</span>);</span><br></pre></td></tr></table></figure><p>就是在项目开始之前，执行这个行为定义的所有函数。支持 2 个参数，第二个参数支持需要接受一个数组，例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B(<span class="string">&#x27;app_begin&#x27;</span>, [<span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;tdweb&quot;</span>,<span class="string">&quot;time&quot;</span>=&gt;time()]);</span><br></pre></td></tr></table></figure><h1 id="C-方法"><a href="#C-方法" class="headerlink" title="C 方法"></a>C 方法</h1><p>C 方法是 Think 用于设置、获取，以及保存配置参数的方法，使用频率较高。</p><p>动态设置配置参数，配置参数不区分大小写，但是建议保持统一大写的配置定义规范。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C(<span class="string">&#x27;DB_NAME&#x27;</span>,<span class="string">&#x27;think&#x27;</span>);</span><br></pre></td></tr></table></figure><p>支持二级配置参数的设置，配置参数不建议超过二级。例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C(<span class="string">&#x27;USER.USER_ID&#x27;</span>,<span class="number">8</span>);</span><br></pre></td></tr></table></figure><p>如果要设置多个参数，可以使用批量设置，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;user_id&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;user_type&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">C(<span class="variable">$config</span>);</span><br></pre></td></tr></table></figure><p>如果传入的配置参数为空，表示获取全部的参数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$config</span> = C();</span><br></pre></td></tr></table></figure><h1 id="D-方法"><a href="#D-方法" class="headerlink" title="D 方法"></a>D 方法</h1><p>D 方法应该是用的比较多的方法了，用于实例化自定义模型类，是 Think 框架对 Model 类实例化的一种封装，并实现了单例模式，支持跨项目和分组调用，调用格式如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D(<span class="string">&#x27;[项目://][分组/]模型&#x27;</span>,<span class="string">&#x27;模型层名称&#x27;</span>)</span><br></pre></td></tr></table></figure><p>方法的返回值是实例化的模型对象。</p><p>D 方法可以自动检测模型类，如果存在自定义的模型类，则实例化自定义模型类，如果不存在，则会实例化 Model 基类，同时对于已实例化过的模型，不会重复去实例化。</p><p>D 方法最常用的用法就是实例化当前项目的某个自定义模型，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实例化 User 模型</span></span><br><span class="line"><span class="variable">$User</span> = D(<span class="string">&#x27;User&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="F-方法"><a href="#F-方法" class="headerlink" title="F 方法"></a>F 方法</h1><p>F 方法其实是 S 方法的一个子集功能，仅用于简单数据缓存，并且只能支持文件形式，不支持缓存有效期，因为采用的是返回方式，所以其效率较 S 方法较高，因此我们也称之为快速缓存方法。</p><p>F 方法的特点是：</p><ul><li>简单数据缓存；</li><li>文件形式保存；</li><li>采用返回数据方式加载缓存；</li><li>支持子目录缓存以及自动创建；</li><li>支持删除缓存和批量删除；</li></ul><p>写入和读取缓存</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F(<span class="string">&#x27;data&#x27;</span>,<span class="string">&#x27;test data&#x27;</span>);</span><br></pre></td></tr></table></figure><p>默认的保存起始路径是 <em>DATA_PATH</em>（该常量在默认配置位于 <em>RUNTIME_PATH.’Data/‘</em> 下面），也就是说会生成文件名为 <em>DATA_PATH.’data.’</em> 的缓存文件。</p><p>注意：确保你的缓存标识的唯一，避免数据覆盖和冲突。</p><p>下次读取缓存数据的时候，使用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$Data</span> = F(<span class="string">&#x27;data&#x27;</span>);</span><br></pre></td></tr></table></figure><p>我们可以采用子目录方式保存，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">F(<span class="string">&#x27;user/data&#x27;</span>,<span class="variable">$data</span>); <span class="comment">// 缓存写入</span></span><br><span class="line">F(<span class="string">&#x27;user/data&#x27;</span>); <span class="comment">// 读取缓存</span></span><br></pre></td></tr></table></figure><p>就会生成 <em>DATA_PATH.’user/data.’</em> 缓存文件，如果 user 子目录不存在的话，则会自动创建，也可以支持多级子目录，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F(<span class="string">&#x27;level1/level2/data&#x27;</span>,<span class="variable">$data</span>);</span><br></pre></td></tr></table></figure><p>如果需要指定缓存的起始目录，可以用下面的方式：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F(<span class="string">&#x27;data&#x27;</span>,<span class="variable">$data</span>,TEMP_PATH);</span><br></pre></td></tr></table></figure><p>删除缓存</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F(<span class="string">&#x27;data&#x27;</span>,<span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure><h1 id="G-方法"><a href="#G-方法" class="headerlink" title="G 方法"></a>G 方法</h1><p>G 方法的作用包括标记位置和区间统计两个功能，下面来看下具体用法：</p><h2 id="标记位置"><a href="#标记位置" class="headerlink" title="标记位置"></a>标记位置</h2><p>G 方法的第一个用法就是标记位置，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">G(<span class="string">&#x27;begin&#x27;</span>);</span><br></pre></td></tr></table></figure><p>表示把当前位置标记为 begin 标签，并且记录当前位置的执行时间，如果环境支持的话，还能记录内存占用情况。可以在任何位置调用 G 方法标记。</p><h2 id="运行时间统计"><a href="#运行时间统计" class="headerlink" title="运行时间统计"></a>运行时间统计</h2><p>标记位置后，我们就可以再次调用 G 方法进行区间统计了，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">G(<span class="string">&#x27;begin&#x27;</span>);</span><br><span class="line"><span class="comment">// ...其他代码段</span></span><br><span class="line">G(<span class="string">&#x27;end&#x27;</span>);</span><br><span class="line"><span class="comment">// ...也许这里还有其他代码</span></span><br><span class="line"><span class="comment">// 进行统计区间</span></span><br><span class="line"><span class="keyword">echo</span> G(<span class="string">&#x27;begin&#x27;</span>,<span class="string">&#x27;end&#x27;</span>).<span class="string">&#x27;s&#x27;</span>;</span><br></pre></td></tr></table></figure><p><em>G(‘begin’,’end’)</em> 表示统计 begin 位置到 end 位置的执行时间（单位是秒），begin 必须是一个已经标记过的位置，如果这个时候 end 位置还没被标记过，则会自动把当前位置标记为 end 标签，输出的结果类似于：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0.0056</span>s</span><br></pre></td></tr></table></figure><p>默认的统计精度是小数点后 4 位，如果觉得这个统计精度不够，还可以设置例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">G(<span class="string">&#x27;begin&#x27;</span>,<span class="string">&#x27;end&#x27;</span>,<span class="number">6</span>).<span class="string">&#x27;s&#x27;</span>;</span><br></pre></td></tr></table></figure><p>内存开销统计</p><p>如果你的环境支持内存占用统计的话，还可以使用 G 方法进行区间内存开销统计（单位为 kb），例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> G(<span class="string">&#x27;begin&#x27;</span>,<span class="string">&#x27;end&#x27;</span>,<span class="string">&#x27;m&#x27;</span>).<span class="string">&#x27;kb&#x27;</span>;</span><br></pre></td></tr></table></figure><p>第三个参数使用 m 表示进行内存开销统计，输出的结果可能是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">625</span>kb</span><br></pre></td></tr></table></figure><h1 id="I-方法"><a href="#I-方法" class="headerlink" title="I 方法"></a>I 方法</h1><p>正如你所见到的一样，I 方法是 Thinkphp 众多单字母函数中的新成员，其命名来自于英文 Input（输入），主要用于更加方便和安全的获取系统输入变量，可以用于任何地方，用法格式如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I(<span class="string">&#x27;变量类型.变量名&#x27;</span>,[<span class="string">&#x27;默认值&#x27;</span>],[<span class="string">&#x27;过滤方法&#x27;</span>])</span><br></pre></td></tr></table></figure><p>变量类型是指请求方式或者输入类型，包括：</p><table><thead><tr><th align="center">方式</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">get</td><td align="center">获取 GET 参数</td></tr><tr><td align="center">post</td><td align="center">获取 POST 参数</td></tr><tr><td align="center">param</td><td align="center">自动判断请求类型获取 GET、POST 或者 PUT 参数</td></tr><tr><td align="center">request</td><td align="center">获取 REQUEST 参数</td></tr><tr><td align="center">put</td><td align="center">获取 PUT 参数</td></tr><tr><td align="center">session</td><td align="center">获取 $_SESSION 参数</td></tr><tr><td align="center">cookie</td><td align="center">获取 $_COOKIE 参数</td></tr><tr><td align="center">server</td><td align="center">获取 $_SERVER 参数</td></tr><tr><td align="center">globals</td><td align="center">获取 $GLOBALS 参数</td></tr></tbody></table><p>注意：变量类型不区分大小写。变量名则严格区分大小写。</p><p>默认值和过滤方法均属于可选参数。</p><h1 id="L-方法"><a href="#L-方法" class="headerlink" title="L 方法"></a>L 方法</h1><p>L 方法用于启用多语言的情况下，设置和获取当前的语言定义。</p><p>调用格式：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">L(<span class="string">&#x27;语言变量&#x27;</span>,[<span class="string">&#x27;语言值&#x27;</span>])</span><br></pre></td></tr></table></figure><h1 id="M-方法"><a href="#M-方法" class="headerlink" title="M 方法"></a>M 方法</h1><p>M 方法用于实例化一个基础模型类，和 D 方法的区别在于：</p><ul><li>不需要自定义模型类，减少 IO 加载，性能较好；</li><li>实例化后只能调用基础模型类（默认是 Model 类）中的方法；</li><li>可以在实例化的时候指定表前缀、数据库和数据库的连接信息；</li></ul><p>D 方法的强大则体现在你封装的自定义模型类有多强，不过随着新版 Think 框架的基础模型类的功能越来越强大，M 方法也比 D 方法越来越实用了。</p><p>M 方法的调用格式：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">M(<span class="string">&#x27;[基础模型名:]模型名&#x27;</span>,<span class="string">&#x27;数据表前缀&#x27;</span>,<span class="string">&#x27;数据库连接信息&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="R-方法"><a href="#R-方法" class="headerlink" title="R 方法"></a>R 方法</h1><p>R 方法用于调用某个控制器的操作方法，是 A 方法的进一步增强和补充。</p><p>R 方法的调用格式：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R(<span class="string">&#x27;[项目://][分组/]模块/操作&#x27;</span>,<span class="string">&#x27;参数&#x27;</span>,<span class="string">&#x27;控制器层名称&#x27;</span>)</span><br></pre></td></tr></table></figure><p>可以通过 R 方法在其他控制器里面调用这个操作方法（一般 R 方法用于跨模块调用）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$data</span> = R(<span class="string">&#x27;User/detail&#x27;</span>,<span class="keyword">array</span>(<span class="string">&#x27;5&#x27;</span>));</span><br></pre></td></tr></table></figure><p>官方的建议是不要在同一层多太多调用，会引起逻辑的混乱，被公共调用的部分应该封装成单独的接口，可以借助3.1的新特性多层控制器，单独添加一个控制器层用于接口调用</p><h1 id="S-方法"><a href="#S-方法" class="headerlink" title="S 方法"></a>S 方法</h1><p>S 方法还支持对当前的缓存方式传入缓存参数，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S(<span class="string">&#x27;data&#x27;</span>,<span class="variable">$Data</span>,<span class="number">3600</span>,<span class="string">&#x27;File&#x27;</span>,<span class="keyword">array</span>(<span class="string">&#x27;length&#x27;</span>=&gt;<span class="number">10</span>,<span class="string">&#x27;temp&#x27;</span>=&gt;RUNTIME_PATH.<span class="string">&#x27;temp/&#x27;</span>));</span><br></pre></td></tr></table></figure><h1 id="T-方法"><a href="#T-方法" class="headerlink" title="T 方法"></a>T 方法</h1><p>为了更方便的输出模板文件，新版封装了一个 T 函数用于生成模板文件名。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T([资源:<span class="comment">//][模块@][主题/][控制器/]操作,[视图分层])</span></span><br></pre></td></tr></table></figure><p>T 函数的返回值是一个完整的模板文件名，可以直接用于 display 和 fetch 方法进行渲染输出。</p><h1 id="U-方法"><a href="#U-方法" class="headerlink" title="U 方法"></a>U 方法</h1><p>U 方法用于完成对 URL 地址的组装，特点在于可以自动根据当前的 URL 模式和设置生成对应的 URL 地址，格式为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U(<span class="string">&#x27;地址&#x27;</span>,<span class="string">&#x27;参数&#x27;</span>,<span class="string">&#x27;伪静态&#x27;</span>,<span class="string">&#x27;是否跳转&#x27;</span>,<span class="string">&#x27;显示域名&#x27;</span>);</span><br></pre></td></tr></table></figure><p>在模板中使用 U 方法而不是固定写死 URL 地址的好处在于，一旦你的环境变化或者参数设置改变，你不需要更改模板中的任何代码。</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
